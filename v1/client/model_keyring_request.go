/*
 * Nomad
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.1.3
 * Contact: support@hashicorp.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// KeyringRequest struct for KeyringRequest
type KeyringRequest struct {
	Key *string `json:"Key,omitempty"`
}

// NewKeyringRequest instantiates a new KeyringRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKeyringRequest() *KeyringRequest {
	this := KeyringRequest{}
	return &this
}

// NewKeyringRequestWithDefaults instantiates a new KeyringRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKeyringRequestWithDefaults() *KeyringRequest {
	this := KeyringRequest{}
	return &this
}

// GetKey returns the Key field value if set, zero value otherwise.
func (o *KeyringRequest) GetKey() string {
	if o == nil || o.Key == nil {
		var ret string
		return ret
	}
	return *o.Key
}

// GetKeyOk returns a tuple with the Key field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeyringRequest) GetKeyOk() (*string, bool) {
	if o == nil || o.Key == nil {
		return nil, false
	}
	return o.Key, true
}

// HasKey returns a boolean if a field has been set.
func (o *KeyringRequest) HasKey() bool {
	if o != nil && o.Key != nil {
		return true
	}

	return false
}

// SetKey gets a reference to the given string and assigns it to the Key field.
func (o *KeyringRequest) SetKey(v string) {
	o.Key = &v
}

func (o KeyringRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Key != nil {
		toSerialize["Key"] = o.Key
	}
	return json.Marshal(toSerialize)
}

type NullableKeyringRequest struct {
	value *KeyringRequest
	isSet bool
}

func (v NullableKeyringRequest) Get() *KeyringRequest {
	return v.value
}

func (v *NullableKeyringRequest) Set(val *KeyringRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableKeyringRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableKeyringRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKeyringRequest(val *KeyringRequest) *NullableKeyringRequest {
	return &NullableKeyringRequest{value: val, isSet: true}
}

func (v NullableKeyringRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKeyringRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


