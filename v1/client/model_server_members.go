/*
 * Nomad
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.1.3
 * Contact: support@hashicorp.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// ServerMembers struct for ServerMembers
type ServerMembers struct {
	Members *[]AgentMember `json:"Members,omitempty"`
	ServerDC *string `json:"ServerDC,omitempty"`
	ServerName *string `json:"ServerName,omitempty"`
	ServerRegion *string `json:"ServerRegion,omitempty"`
}

// NewServerMembers instantiates a new ServerMembers object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewServerMembers() *ServerMembers {
	this := ServerMembers{}
	return &this
}

// NewServerMembersWithDefaults instantiates a new ServerMembers object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewServerMembersWithDefaults() *ServerMembers {
	this := ServerMembers{}
	return &this
}

// GetMembers returns the Members field value if set, zero value otherwise.
func (o *ServerMembers) GetMembers() []AgentMember {
	if o == nil || o.Members == nil {
		var ret []AgentMember
		return ret
	}
	return *o.Members
}

// GetMembersOk returns a tuple with the Members field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServerMembers) GetMembersOk() (*[]AgentMember, bool) {
	if o == nil || o.Members == nil {
		return nil, false
	}
	return o.Members, true
}

// HasMembers returns a boolean if a field has been set.
func (o *ServerMembers) HasMembers() bool {
	if o != nil && o.Members != nil {
		return true
	}

	return false
}

// SetMembers gets a reference to the given []AgentMember and assigns it to the Members field.
func (o *ServerMembers) SetMembers(v []AgentMember) {
	o.Members = &v
}

// GetServerDC returns the ServerDC field value if set, zero value otherwise.
func (o *ServerMembers) GetServerDC() string {
	if o == nil || o.ServerDC == nil {
		var ret string
		return ret
	}
	return *o.ServerDC
}

// GetServerDCOk returns a tuple with the ServerDC field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServerMembers) GetServerDCOk() (*string, bool) {
	if o == nil || o.ServerDC == nil {
		return nil, false
	}
	return o.ServerDC, true
}

// HasServerDC returns a boolean if a field has been set.
func (o *ServerMembers) HasServerDC() bool {
	if o != nil && o.ServerDC != nil {
		return true
	}

	return false
}

// SetServerDC gets a reference to the given string and assigns it to the ServerDC field.
func (o *ServerMembers) SetServerDC(v string) {
	o.ServerDC = &v
}

// GetServerName returns the ServerName field value if set, zero value otherwise.
func (o *ServerMembers) GetServerName() string {
	if o == nil || o.ServerName == nil {
		var ret string
		return ret
	}
	return *o.ServerName
}

// GetServerNameOk returns a tuple with the ServerName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServerMembers) GetServerNameOk() (*string, bool) {
	if o == nil || o.ServerName == nil {
		return nil, false
	}
	return o.ServerName, true
}

// HasServerName returns a boolean if a field has been set.
func (o *ServerMembers) HasServerName() bool {
	if o != nil && o.ServerName != nil {
		return true
	}

	return false
}

// SetServerName gets a reference to the given string and assigns it to the ServerName field.
func (o *ServerMembers) SetServerName(v string) {
	o.ServerName = &v
}

// GetServerRegion returns the ServerRegion field value if set, zero value otherwise.
func (o *ServerMembers) GetServerRegion() string {
	if o == nil || o.ServerRegion == nil {
		var ret string
		return ret
	}
	return *o.ServerRegion
}

// GetServerRegionOk returns a tuple with the ServerRegion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServerMembers) GetServerRegionOk() (*string, bool) {
	if o == nil || o.ServerRegion == nil {
		return nil, false
	}
	return o.ServerRegion, true
}

// HasServerRegion returns a boolean if a field has been set.
func (o *ServerMembers) HasServerRegion() bool {
	if o != nil && o.ServerRegion != nil {
		return true
	}

	return false
}

// SetServerRegion gets a reference to the given string and assigns it to the ServerRegion field.
func (o *ServerMembers) SetServerRegion(v string) {
	o.ServerRegion = &v
}

func (o ServerMembers) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Members != nil {
		toSerialize["Members"] = o.Members
	}
	if o.ServerDC != nil {
		toSerialize["ServerDC"] = o.ServerDC
	}
	if o.ServerName != nil {
		toSerialize["ServerName"] = o.ServerName
	}
	if o.ServerRegion != nil {
		toSerialize["ServerRegion"] = o.ServerRegion
	}
	return json.Marshal(toSerialize)
}

type NullableServerMembers struct {
	value *ServerMembers
	isSet bool
}

func (v NullableServerMembers) Get() *ServerMembers {
	return v.value
}

func (v *NullableServerMembers) Set(val *ServerMembers) {
	v.value = val
	v.isSet = true
}

func (v NullableServerMembers) IsSet() bool {
	return v.isSet
}

func (v *NullableServerMembers) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableServerMembers(val *ServerMembers) *NullableServerMembers {
	return &NullableServerMembers{value: val, isSet: true}
}

func (v NullableServerMembers) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableServerMembers) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


