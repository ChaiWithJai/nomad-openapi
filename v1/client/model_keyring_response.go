/*
 * Nomad
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.1.3
 * Contact: support@hashicorp.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// KeyringResponse struct for KeyringResponse
type KeyringResponse struct {
	Keys *map[string]int32 `json:"Keys,omitempty"`
	Messages *Object `json:"Messages,omitempty"`
	NumNodes *int32 `json:"NumNodes,omitempty"`
}

// NewKeyringResponse instantiates a new KeyringResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKeyringResponse() *KeyringResponse {
	this := KeyringResponse{}
	return &this
}

// NewKeyringResponseWithDefaults instantiates a new KeyringResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKeyringResponseWithDefaults() *KeyringResponse {
	this := KeyringResponse{}
	return &this
}

// GetKeys returns the Keys field value if set, zero value otherwise.
func (o *KeyringResponse) GetKeys() map[string]int32 {
	if o == nil || o.Keys == nil {
		var ret map[string]int32
		return ret
	}
	return *o.Keys
}

// GetKeysOk returns a tuple with the Keys field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeyringResponse) GetKeysOk() (*map[string]int32, bool) {
	if o == nil || o.Keys == nil {
		return nil, false
	}
	return o.Keys, true
}

// HasKeys returns a boolean if a field has been set.
func (o *KeyringResponse) HasKeys() bool {
	if o != nil && o.Keys != nil {
		return true
	}

	return false
}

// SetKeys gets a reference to the given map[string]int32 and assigns it to the Keys field.
func (o *KeyringResponse) SetKeys(v map[string]int32) {
	o.Keys = &v
}

// GetMessages returns the Messages field value if set, zero value otherwise.
func (o *KeyringResponse) GetMessages() Object {
	if o == nil || o.Messages == nil {
		var ret Object
		return ret
	}
	return *o.Messages
}

// GetMessagesOk returns a tuple with the Messages field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeyringResponse) GetMessagesOk() (*Object, bool) {
	if o == nil || o.Messages == nil {
		return nil, false
	}
	return o.Messages, true
}

// HasMessages returns a boolean if a field has been set.
func (o *KeyringResponse) HasMessages() bool {
	if o != nil && o.Messages != nil {
		return true
	}

	return false
}

// SetMessages gets a reference to the given Object and assigns it to the Messages field.
func (o *KeyringResponse) SetMessages(v Object) {
	o.Messages = &v
}

// GetNumNodes returns the NumNodes field value if set, zero value otherwise.
func (o *KeyringResponse) GetNumNodes() int32 {
	if o == nil || o.NumNodes == nil {
		var ret int32
		return ret
	}
	return *o.NumNodes
}

// GetNumNodesOk returns a tuple with the NumNodes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeyringResponse) GetNumNodesOk() (*int32, bool) {
	if o == nil || o.NumNodes == nil {
		return nil, false
	}
	return o.NumNodes, true
}

// HasNumNodes returns a boolean if a field has been set.
func (o *KeyringResponse) HasNumNodes() bool {
	if o != nil && o.NumNodes != nil {
		return true
	}

	return false
}

// SetNumNodes gets a reference to the given int32 and assigns it to the NumNodes field.
func (o *KeyringResponse) SetNumNodes(v int32) {
	o.NumNodes = &v
}

func (o KeyringResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Keys != nil {
		toSerialize["Keys"] = o.Keys
	}
	if o.Messages != nil {
		toSerialize["Messages"] = o.Messages
	}
	if o.NumNodes != nil {
		toSerialize["NumNodes"] = o.NumNodes
	}
	return json.Marshal(toSerialize)
}

type NullableKeyringResponse struct {
	value *KeyringResponse
	isSet bool
}

func (v NullableKeyringResponse) Get() *KeyringResponse {
	return v.value
}

func (v *NullableKeyringResponse) Set(val *KeyringResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableKeyringResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableKeyringResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKeyringResponse(val *KeyringResponse) *NullableKeyringResponse {
	return &NullableKeyringResponse{value: val, isSet: true}
}

func (v NullableKeyringResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKeyringResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


