/*
 * Nomad
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.1.3
 * Contact: support@hashicorp.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// AgentHealth struct for AgentHealth
type AgentHealth struct {
	Message *string `json:"message,omitempty"`
	Ok *bool `json:"ok,omitempty"`
}

// NewAgentHealth instantiates a new AgentHealth object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAgentHealth() *AgentHealth {
	this := AgentHealth{}
	return &this
}

// NewAgentHealthWithDefaults instantiates a new AgentHealth object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAgentHealthWithDefaults() *AgentHealth {
	this := AgentHealth{}
	return &this
}

// GetMessage returns the Message field value if set, zero value otherwise.
func (o *AgentHealth) GetMessage() string {
	if o == nil || o.Message == nil {
		var ret string
		return ret
	}
	return *o.Message
}

// GetMessageOk returns a tuple with the Message field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AgentHealth) GetMessageOk() (*string, bool) {
	if o == nil || o.Message == nil {
		return nil, false
	}
	return o.Message, true
}

// HasMessage returns a boolean if a field has been set.
func (o *AgentHealth) HasMessage() bool {
	if o != nil && o.Message != nil {
		return true
	}

	return false
}

// SetMessage gets a reference to the given string and assigns it to the Message field.
func (o *AgentHealth) SetMessage(v string) {
	o.Message = &v
}

// GetOk returns the Ok field value if set, zero value otherwise.
func (o *AgentHealth) GetOk() bool {
	if o == nil || o.Ok == nil {
		var ret bool
		return ret
	}
	return *o.Ok
}

// GetOkOk returns a tuple with the Ok field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AgentHealth) GetOkOk() (*bool, bool) {
	if o == nil || o.Ok == nil {
		return nil, false
	}
	return o.Ok, true
}

// HasOk returns a boolean if a field has been set.
func (o *AgentHealth) HasOk() bool {
	if o != nil && o.Ok != nil {
		return true
	}

	return false
}

// SetOk gets a reference to the given bool and assigns it to the Ok field.
func (o *AgentHealth) SetOk(v bool) {
	o.Ok = &v
}

func (o AgentHealth) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Message != nil {
		toSerialize["message"] = o.Message
	}
	if o.Ok != nil {
		toSerialize["ok"] = o.Ok
	}
	return json.Marshal(toSerialize)
}

type NullableAgentHealth struct {
	value *AgentHealth
	isSet bool
}

func (v NullableAgentHealth) Get() *AgentHealth {
	return v.value
}

func (v *NullableAgentHealth) Set(val *AgentHealth) {
	v.value = val
	v.isSet = true
}

func (v NullableAgentHealth) IsSet() bool {
	return v.isSet
}

func (v *NullableAgentHealth) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAgentHealth(val *AgentHealth) *NullableAgentHealth {
	return &NullableAgentHealth{value: val, isSet: true}
}

func (v NullableAgentHealth) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAgentHealth) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


