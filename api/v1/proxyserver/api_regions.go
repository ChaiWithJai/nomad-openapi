/*
 * Nomad
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.1.3
 * Contact: support@hashicorp.com
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package main

import (
	"net/http"
	"strings"
)

// A RegionsApiController binds http requests to an api service and writes the service results to the http response
type RegionsApiController struct {
	service RegionsApiServicer
}

// NewRegionsApiController creates a default api controller
func NewRegionsApiController(s RegionsApiServicer) Router {
	return &RegionsApiController{service: s}
}

// Routes returns all of the api route for the RegionsApiController
func (c *RegionsApiController) Routes() Routes {
	return Routes{
		{
			"GetRegions",
			strings.ToUpper("Get"),
			"/v1/regions",
			c.GetRegions,
		},
	}
}

// GetRegions -
func (c *RegionsApiController) GetRegions(w http.ResponseWriter, r *http.Request) {
	result, err := c.service.GetRegions(r.Context())
	// If an error occurred, encode the error with the status code
	if err != nil {
		EncodeJSONResponse(err.Error(), &result.Code, result.Headers, w)
		return
	}
	// If no error, encode the body and the result code
	EncodeJSONResponse(result.Body, &result.Code, result.Headers, w)

}
