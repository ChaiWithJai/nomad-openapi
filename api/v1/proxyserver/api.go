/*
 * Nomad
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.1.3
 * Contact: support@hashicorp.com
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package main

import (
	"context"
	"net/http"
)

// EnterpriseApiRouter defines the required methods for binding the api requests to a responses for the EnterpriseApi
// The EnterpriseApiRouter implementation should parse necessary information from the http request,
// pass the data to a EnterpriseApiServicer to perform the required actions, then write the service results to the http response.
type EnterpriseApiRouter interface {
	CreateQuotaSpec(http.ResponseWriter, *http.Request)
	DeleteQuotaSpec(http.ResponseWriter, *http.Request)
	GetQuotaSpec(http.ResponseWriter, *http.Request)
	GetQuotas(http.ResponseWriter, *http.Request)
	PostQuotaSpec(http.ResponseWriter, *http.Request)
}

// JobsApiRouter defines the required methods for binding the api requests to a responses for the JobsApi
// The JobsApiRouter implementation should parse necessary information from the http request,
// pass the data to a JobsApiServicer to perform the required actions, then write the service results to the http response.
type JobsApiRouter interface {
	DeleteJob(http.ResponseWriter, *http.Request)
	GetJob(http.ResponseWriter, *http.Request)
	GetJobAllocations(http.ResponseWriter, *http.Request)
	GetJobDeployment(http.ResponseWriter, *http.Request)
	GetJobDeployments(http.ResponseWriter, *http.Request)
	GetJobEvaluations(http.ResponseWriter, *http.Request)
	GetJobScaleStatus(http.ResponseWriter, *http.Request)
	GetJobSummary(http.ResponseWriter, *http.Request)
	GetJobVersions(http.ResponseWriter, *http.Request)
	GetJobs(http.ResponseWriter, *http.Request)
	PostJob(http.ResponseWriter, *http.Request)
	PostJobDispatch(http.ResponseWriter, *http.Request)
	PostJobEvaluate(http.ResponseWriter, *http.Request)
	PostJobParse(http.ResponseWriter, *http.Request)
	PostJobPeriodicForce(http.ResponseWriter, *http.Request)
	PostJobPlan(http.ResponseWriter, *http.Request)
	PostJobRevert(http.ResponseWriter, *http.Request)
	PostJobScalingRequest(http.ResponseWriter, *http.Request)
	PostJobStability(http.ResponseWriter, *http.Request)
	PostJobValidateRequest(http.ResponseWriter, *http.Request)
	RegisterJob(http.ResponseWriter, *http.Request)
}

// MetricsApiRouter defines the required methods for binding the api requests to a responses for the MetricsApi
// The MetricsApiRouter implementation should parse necessary information from the http request,
// pass the data to a MetricsApiServicer to perform the required actions, then write the service results to the http response.
type MetricsApiRouter interface {
	GetMetricsSummary(http.ResponseWriter, *http.Request)
}

// NamespacesApiRouter defines the required methods for binding the api requests to a responses for the NamespacesApi
// The NamespacesApiRouter implementation should parse necessary information from the http request,
// pass the data to a NamespacesApiServicer to perform the required actions, then write the service results to the http response.
type NamespacesApiRouter interface {
	CreateNamespace(http.ResponseWriter, *http.Request)
	DeleteNamespace(http.ResponseWriter, *http.Request)
	GetNamespace(http.ResponseWriter, *http.Request)
	GetNamespaces(http.ResponseWriter, *http.Request)
	PostNamespace(http.ResponseWriter, *http.Request)
}

// RegionsApiRouter defines the required methods for binding the api requests to a responses for the RegionsApi
// The RegionsApiRouter implementation should parse necessary information from the http request,
// pass the data to a RegionsApiServicer to perform the required actions, then write the service results to the http response.
type RegionsApiRouter interface {
	GetRegions(http.ResponseWriter, *http.Request)
}

// SearchApiRouter defines the required methods for binding the api requests to a responses for the SearchApi
// The SearchApiRouter implementation should parse necessary information from the http request,
// pass the data to a SearchApiServicer to perform the required actions, then write the service results to the http response.
type SearchApiRouter interface {
	GetFuzzySearch(http.ResponseWriter, *http.Request)
	GetSearch(http.ResponseWriter, *http.Request)
}

// VolumesApiRouter defines the required methods for binding the api requests to a responses for the VolumesApi
// The VolumesApiRouter implementation should parse necessary information from the http request,
// pass the data to a VolumesApiServicer to perform the required actions, then write the service results to the http response.
type VolumesApiRouter interface {
	CreateVolume(http.ResponseWriter, *http.Request)
	DeleteSnapshot(http.ResponseWriter, *http.Request)
	DeleteVolumeRegistration(http.ResponseWriter, *http.Request)
	DetachOrDeleteVolume(http.ResponseWriter, *http.Request)
	GetExternalVolumes(http.ResponseWriter, *http.Request)
	GetSnapshots(http.ResponseWriter, *http.Request)
	GetVolume(http.ResponseWriter, *http.Request)
	GetVolumes(http.ResponseWriter, *http.Request)
	PostSnapshot(http.ResponseWriter, *http.Request)
	PostVolume(http.ResponseWriter, *http.Request)
	PostVolumeRegistration(http.ResponseWriter, *http.Request)
}

// EnterpriseApiServicer defines the api actions for the EnterpriseApi service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type EnterpriseApiServicer interface {
	CreateQuotaSpec(context.Context, QuotaSpec, string, string, string, string) (ImplResponse, error)
	DeleteQuotaSpec(context.Context, string, string, string, string, string) (ImplResponse, error)
	GetQuotaSpec(context.Context, string, string, string, int32, string, string, string, string, int32, string) (ImplResponse, error)
	GetQuotas(context.Context, string, string, int32, string, string, string, string, int32, string) (ImplResponse, error)
	PostQuotaSpec(context.Context, string, QuotaSpec, string, string, string, string) (ImplResponse, error)
}

// JobsApiServicer defines the api actions for the JobsApi service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type JobsApiServicer interface {
	DeleteJob(context.Context, string, string, string, string, string, bool, bool) (ImplResponse, error)
	GetJob(context.Context, string, string, string, int32, string, string, string, string, int32, string) (ImplResponse, error)
	GetJobAllocations(context.Context, string, string, string, int32, string, string, string, string, int32, string) (ImplResponse, error)
	GetJobDeployment(context.Context, string, string, string, int32, string, string, string, string, int32, string) (ImplResponse, error)
	GetJobDeployments(context.Context, string, string, string, int32, string, string, string, string, int32, string, int32) (ImplResponse, error)
	GetJobEvaluations(context.Context, string, string, string, int32, string, string, string, string, int32, string) (ImplResponse, error)
	GetJobScaleStatus(context.Context, string, string, string, int32, string, string, string, string, int32, string) (ImplResponse, error)
	GetJobSummary(context.Context, string, string, string, int32, string, string, string, string, int32, string) (ImplResponse, error)
	GetJobVersions(context.Context, string, string, string, int32, string, string, string, string, int32, string, bool) (ImplResponse, error)
	GetJobs(context.Context, string, string, int32, string, string, string, string, int32, string) (ImplResponse, error)
	PostJob(context.Context, string, JobRegisterRequest, string, string, string, string) (ImplResponse, error)
	PostJobDispatch(context.Context, string, JobDispatchRequest, string, string, string, string) (ImplResponse, error)
	PostJobEvaluate(context.Context, string, JobEvaluateRequest, string, string, string, string) (ImplResponse, error)
	PostJobParse(context.Context, JobsParseRequest) (ImplResponse, error)
	PostJobPeriodicForce(context.Context, string, string, string, string, string) (ImplResponse, error)
	PostJobPlan(context.Context, string, JobPlanRequest, string, string, string, string) (ImplResponse, error)
	PostJobRevert(context.Context, string, JobRevertRequest, string, string, string, string) (ImplResponse, error)
	PostJobScalingRequest(context.Context, string, ScalingRequest, string, string, string, string) (ImplResponse, error)
	PostJobStability(context.Context, string, JobStabilityRequest, string, string, string, string) (ImplResponse, error)
	PostJobValidateRequest(context.Context, JobValidateRequest, string, string, string, string) (ImplResponse, error)
	RegisterJob(context.Context, JobRegisterRequest, string, string, string, string) (ImplResponse, error)
}

// MetricsApiServicer defines the api actions for the MetricsApi service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type MetricsApiServicer interface {
	GetMetricsSummary(context.Context, string) (ImplResponse, error)
}

// NamespacesApiServicer defines the api actions for the NamespacesApi service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type NamespacesApiServicer interface {
	CreateNamespace(context.Context, string, string, string, string) (ImplResponse, error)
	DeleteNamespace(context.Context, string, string, string, string, string) (ImplResponse, error)
	GetNamespace(context.Context, string, string, string, int32, string, string, string, string, int32, string) (ImplResponse, error)
	GetNamespaces(context.Context, NamespaceListRequest, string, string, int32, string, string, string, string, int32, string) (ImplResponse, error)
	PostNamespace(context.Context, string, Namespace, string, string, string, string) (ImplResponse, error)
}

// RegionsApiServicer defines the api actions for the RegionsApi service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type RegionsApiServicer interface {
	GetRegions(context.Context) (ImplResponse, error)
}

// SearchApiServicer defines the api actions for the SearchApi service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type SearchApiServicer interface {
	GetFuzzySearch(context.Context, FuzzySearchRequest, string, string, int32, string, string, string, string, int32, string) (ImplResponse, error)
	GetSearch(context.Context, SearchRequest, string, string, int32, string, string, string, string, int32, string) (ImplResponse, error)
}

// VolumesApiServicer defines the api actions for the VolumesApi service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type VolumesApiServicer interface {
	CreateVolume(context.Context, string, string, CsiVolumeCreateRequest, string, string, string, string) (ImplResponse, error)
	DeleteSnapshot(context.Context, string, string, string, string, string, string) (ImplResponse, error)
	DeleteVolumeRegistration(context.Context, string, string, string, string, string, string) (ImplResponse, error)
	DetachOrDeleteVolume(context.Context, string, string, string, string, string, string, string) (ImplResponse, error)
	GetExternalVolumes(context.Context, string, string, int32, string, string, string, string, int32, string, string) (ImplResponse, error)
	GetSnapshots(context.Context, string, string, int32, string, string, string, string, int32, string, string) (ImplResponse, error)
	GetVolume(context.Context, string, string, string, int32, string, string, string, string, int32, string) (ImplResponse, error)
	GetVolumes(context.Context, string, string, int32, string, string, string, string, int32, string, string, string, string) (ImplResponse, error)
	PostSnapshot(context.Context, CsiSnapshotCreateRequest, string, string, string, string) (ImplResponse, error)
	PostVolume(context.Context, CsiVolumeRegisterRequest, string, string, string, string) (ImplResponse, error)
	PostVolumeRegistration(context.Context, string, CsiVolumeRegisterRequest, string, string, string, string) (ImplResponse, error)
}
